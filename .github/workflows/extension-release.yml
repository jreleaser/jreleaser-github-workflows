#
# SPDX-License-Identifier: Apache-2.0
#
# Copyright 2022 The JReleaser authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Release

on:
  workflow_call:
    inputs:
      branch:
        default: 'main'
        required: false
        type: string
      version:
        required: true
        type: string
      jreleaser-version:
        default: 'latest'
        required: false
        type: string
      java-version:
        default: '11'
        required: false
        type: string
      java-distro:
        default: 'zulu'
        required: false
        type: string
    secrets:
      github-token:
        required: true
      gpg-passphrase:
        required: true
      gpg-public-key:
        required: true
      gpg-secret-key:
        required: true
      gpg-key-id:
        required: true
      sonatype-username:
        required: true
      sonatype-password:
        required: true
      twitter-consumer-key:
        required: true
      twitter-consumer-secret:
        required: true
      twitter-access-token:
        required: true
      twitter-access-token-secret:
        required: true

jobs:
  precheck:
    name: Precheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: n1hility/cancel-previous-runs@v2
        with:
          token: ${{ secrets.github-token }}

  release:
    name: Release
    needs: [precheck]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distro }}

      - uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}-${{ hashFiles('**/gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradlew-${{ hashFiles('**/gradlew') }}
          restore-keys: |
            ${{ runner.os }}-gradlew-

      - name: Set release version
        run: |
          VERSION=${{ inputs.version }}
          echo $VERSION > VERSION
          git add VERSION
          sed -i -e "s/^\:project-version\:\ .*/:project-version: ${{ inputs.version }}/g" README.adoc
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Action"
          git commit -a -m "Releasing version $VERSION"
          git push origin ${{ inputs.branch }}

      - name: Build
        run: |
          ./gradlew -Prelease=true build -S

      - name: Deploy
        env:
          GPG_KEY_ID: ${{ secrets.gpg-key-id }}
          GPG_SECRET_KEY: ${{ secrets.gpg-secret-key }}
          GPG_PASSPHRASE: ${{ secrets.gpg-passphrase }}
        run: |
          ./gradlew -Prelease=true -Pfull-release=true \
          -PsonatypeUsername=${{ secrets.sonatype-username }} \
          -PsonatypePassword=${{ secrets.sonatype-password }} \
          build publishToSonatype closeAndReleaseSonatypeStagingRepository -S

      - name: Release
        uses: jreleaser/release-action@v2
        with:
          arguments: full-release
          version: ${{ inputs.jreleaser-version }}
        env:
          JRELEASER_PROJECT_VERSION: ${{ inputs.version }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.github-token }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.gpg-passphrase }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.gpg-public-key }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.gpg-secret-key }}
          JRELEASER_TWITTER_CONSUMER_KEY: ${{ secrets.twitter-consumer-key }}
          JRELEASER_TWITTER_CONSUMER_SECRET: ${{ secrets.twitter-consumer-secret }}
          JRELEASER_TWITTER_ACCESS_TOKEN: ${{ secrets.twitter-access-token }}
          JRELEASER_TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.twitter-access-token-secret }}

      - name: JReleaser output
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties
